Axioms, Definitions, and Theorems:
	
	Theorem 3A:
		@u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]

	dom R: 
		@R [ 3D [ @x [ x in D <--> 3y [ <x, y> in R ] ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
		For any set sets R,  dom R  is the set whose members are those 1st-coordinate set of some ordered pair in R

	ran R: 
		@R [ 3D [ @x [ x in D <--> 3t [ <t, x> in R ] ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
		For any set sets R,  ran R  is the set whose members are those 2nd-coordinate set of some ordered pair in R

	Function:
		Definition:
		@F [F is a function <--> F is a relation & @x [ x in dom F --> 3_1y [ <x, y> in F ] ] ]

	
	[MARIN] Pg 43 When F is a function and x the dom F, F(x) is y IFF <x, y> in F:
		@F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]

	Definition of into:
		@F, A, B [ F maps A into B (F: A->B) <--> 
						F is a function &
						dom F = A &
						ran F ⊆ B 
					]

	Zero:
		0 := { }
		
	Definition of successor:
		@a [ a+ := a ∪ {a} ]
		notes:
			{a} can be constructed using Pairing Axiom (singleton)
			a ∪ {a} can be constructed using Union Axiom

	Definition of inductive:
		@A [ A is inductive <--> { } in A & @a [ a in A --> a+ in A ] ]

	Inifinity Axiom:
		3A [ A is inductive ]
		3A [ { } in A & @a [ a in A --> a+ in A ] ]

	Definition of a natural number:
		@b [ b is a natural number <--> @A [ A is inductive --> b in A ] ]

	Theorem 4A:
		3D [ @b [ b in D <--> b is a natural number ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
			ω is the set whose members are exactly the natural numbers 
			@b [ b in ω <--> b is a natural number ]

	Theorem 4B:
		ω is inductive & @A [ A is inductive & A != ω --> @t [ t in ω --> t in A ] ]

	Induction Principle for ω:
		@T [ T is inductive & @n [ n in T --> n in ω ] --> T = ω ]

	Theorem 4C:
		@n [ n is a natural number & n != { } --> 3k [ k is a natural number & k+ = n ] ]

	Definition of Closed Under:
		@S, A [ S is a function & A ⊆ dom S --> [ A is closed under S <--> @x [ x in A --> S(x) in A ] ] ]

	Pg 70 closed under notes (this will help with definition of Peano System):
		@N, S [ S: N->N --> N is closed under S ]

	Definition of Peano System: ***
		@S, N, e [ <S, N, e> is a Peano System <--> [ 
									S: N->N & 				// this implies N is closed under S (as the above statement says)
									e in N & 					// so, N satisfies "e in N & @x [ x in N --> S(x) in N ]"

									~(e in ran S) &
									S is single-rooted &
									@A [ A ⊆ N --> [ e in A & @x [ x in A --> S(x) in A ] --> A = N ] ]			// this is so that N is the "smallest" such set satisfying "e in N & @x [ x in N --> S(x) in N ]"
									
									] 
						]

	[LOCO] Pg 71 existence of successor function that is restricted to ω:
		3D [ @t [ t in D <--> 3n [ n in ω & t = <n, n+> ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
			σ is called the successor function restricted to ω
			@t [ t in σ <--> 3n [ n in ω & t = <n, n+> ] ]

	Theorem 4D:
		<σ, ω, { }> is a Peano System

  [ZHU YUAN] pg 79 Arithmetic A_m existence:
    @m [ m in ω -->  3_1p [ p:ω->ω & p(0) = m & @n [ n in ω --> p(n+) = σ(p(n)) ] ] ]  
      Definition (uniqueness due to 3_1p):
        for any m in ω, A_m:ω->ω & A_m(0) = m & @n [ n in ω --> A_m(n+) = σ(A_m(n)) ]

	Definition of a binary operation:
		@A, f [ f is a binary operation on the set A <--> f: A x A->A ]

	[HAZELNUT] Definition of + operator
		3D [ @t [ t in D <--> 3m, n [ m in ω & n in ω & t = <<m, n>, A_m(n)> ] ] ]
			Definition (its uniqueness is always due to Ext. Axiom):
				@t [ t in + <--> 3m, n [ m in ω & n in ω & t = <<m, n>, A_m(n)> ] ]

				+ := {<<m, n>, p> | m in ω & n in ω & p = A_m(n)}

      Definition of {1} + {2}:
				@m, n [ m, n in ω --> m + n := +(<m, n>) ]

	+ binary operator result:
		+ is a binary operation on the set ω

	Theorem 4I:
		(A1) @m [ m in ω --> m + 0 = m ]
		(A2) @m, n [ m, n in ω --> m + n+ = (m + n)+ ]

  [LAZVELL] pg 80 right addition function existence:
    @m [ m in ω --> 3D [ @t [ t in D <--> 3u [ u in ω & t = <u, u + m> ] ] ] ]
      Definition (its uniqueness is always due to Ext. Axiom):
        for any m in ω, @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]
  
  [Y2K] pg 80 right addition function is into:
    @m [ m in ω --> RIGHT_ADD_m: ω->ω ]

	[先祖代々] pg 80 Multiplication M_m existence:          
    @m [ m in ω -->  3_1p [ p: ω->ω & p(0) = 0 & @n [ n in ω --> p(n+) = RIGHT_ADD_m(p(n)) ] ] ]
			Definition (uniqueness due to 3_1p):
				for any m in ω, M_m: ω->ω & M_m(0) = 0 & @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]

	Definition of * operator
		3D [ @t [ t in D <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ] ]
			Definition (its uniqueness is always due to Ext. Axiom):
				@t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]

				* := {<<m, n>, p> | m in ω & n in ω & p = M_m(n)}

      Definition of {1} * {2}:
				@m, n [ m, n in ω --> m * n := *(<m, n>) ]

	[SHRIMP] * binary operator result:
		* is a binary operation on the set ω



(A1)
1. Show @m [ m in ω --> m * 0 = 0 ]

  2. let m be a set

	////////
  1.D1. @t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]     [Definition of *]

  1.D2. @x [ x in dom * <--> 3y [ <x, y> in * ] ]     [dom UI/* & Ext. Axiom]

  1.D3. @t [ t in ω x ω <--> 3x, y [ x in ω & y in ω & t = <x, y> ] ]      [Corollary 3C UI/ω UI/ω]

  1.D4. @y [ y in ran * <--> 3x [ <x, y> in * ] ]     [ran UI/* & Ext. Axiom]

	1.D5. M_m: ω->ω & M_m(0) = 0 & @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]     [先祖代々 UI/m & Ext. Axiom]
	////////

  3. Show m in ω --> m * 0 = m

    4. m in ω      [ACD]

    5. @m, n [ m, n in ω --> m * n := *(<m, n>) ]   [Definition of {1} * {2}]

    6. m, 0 in ω --> m * 0 := *(<m, 0>)     [5 UI/m, 0]

    7. Show 0 in ω

    	8. ω is inductive & @A [ A is inductive & A != ω --> @t [ t in ω --> t in A ] ]			[Theorem 4B]

			9. ω is inductive			[8 SL]

			10. @A [ A is inductive <--> { } in A & @a [ a in A --> a+ in A ] ]			[Def. of inductive]

			11. ω is inductive <--> { } in ω & @a [ a in ω --> a+ in ω ]			[10 UI/ω]

			12. { } in ω & @a [ a in ω --> a+ in ω ]			[11 BC 9 MP]

			13. { } in ω			[12 SL]

			14.	0 := { }			[Definition of zero]
		
			15. 0 in ω				[13 14 LL]

			16.		[15 DD]

		17. m, 0 in ω			[4 7 ADJ]

		18. m * 0 := *(<m, 0>)			[6 17 MP]


		19. * is a binary operation on the set ω			[SHRIMP]

		20. @A, f [ f is a binary operation on the set A <--> f: A x A->A ]			[Def. of binary operation]

		21. * is a binary operation on the set ω <--> *: ω x ω->ω			[20 UI/*, ω]

		22. *: ω x ω->ω			[21 BC 19 MP]

		23. @F, A, B [ F: A->B <--> 
											F is a function &
											dom F = A &
											ran F ⊆ B 
									]			[Def. of into]
		
		24. *: ω x ω->ω <--> 
							* is a function &
							dom * = ω x ω &
							ran * ⊆ ω			[23 UI/*, ω x ω, ω]
		
		25. * is a function &
					dom * = ω x ω &
					ran * ⊆ ω					[24 BC 22 MP]


		26. Show <<m, 0>, M_m(0)> in *

			27. @t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]			[1.D1]

			28. @t [ t in * <--> 3u, v [ u in ω & v in ω & t = <<u, v>, M_u(v)> ] ]			[27 EQUIV.]

			29. <<m, 0>, M_m(0)> in * <--> 3u, v [ u in ω & v in ω & <<m, 0>, M_m(0)> = <<u, v>, M_u(v)> ]			[28 UI/<<m, 0>, M_m(0)>]

			30. Show 3u, v [ u in ω & v in ω & <<m, 0>, M_m(0)> = <<u, v>, M_u(v)> ]

				31. m, 0 in ω			[17 R]

				32. m in ω				[31 SL]

				33. 0 in ω 				[31 SR]

				34. <<m, 0>, M_m(0)> = <<m, 0>, M_m(0)>			[SID]

				35. m in ω & 0 in ω & <<m, 0>, M_m(0)> = <<m, 0>, M_m(0)>				[32 33 34 ADJ]

				36. 3v [ m in ω & v in ω & <<m, 0>, M_m(0)> = <<m, v>, M_m(v)> ]			[35 EG/0->v]

				37. 3u [ 3v [ u in ω & v in ω & <<m, 0>, M_m(0)> = <<u, v>, M_u(v)> ] ]			[36 EG/m->u]

				38. 3u, v [ u in ω & v in ω & <<m, 0>, M_m(0)> = <<u, v>, M_u(v)> ]			[37 EQUIV.]

				39. 		[38 DD]
			
			40. <<m, 0>, M_m(0)> in *			[29 BC 30 MP]

			41. 		[40 DD]
		
		
		42. @F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]			[MARIN]

		43. * is a function & <m, 0> in dom * -->  @w [ <<m, 0>, w> in * <--> *(<m, 0>) = w ]			[42 UI/* UI/<m, 0>]

		44. * is a function			[25 SL SL]

		45. Show <m, 0> in dom *

			46. @x [ x in dom * <--> 3y [ <x, y> in * ] ] 		[1.D2]

			47. <m, 0> in dom * <--> 3y [ <<m, 0>, y> in * ]			[46 UI/<m, 0>]

			48. <<m, 0>, M_m(0)> in *			[26 R]

			49. 3y [ <<m, 0>, y> in * ]				[48 EG/M_m(0)->y]

			50. <m, 0> in dom *			[47 BC 49 MP]

			51. 		[50 DD]
		
		52. * is a function & <m, 0> in dom *			[44 45 ADJ]

		53. @w [ <<m, 0>, w> in * <--> *(<m, 0>) = w ]				[43 52 MP]

		54. <<m, 0>, M_m(0)> in * <--> *(<m, 0>) = M_m(0)			[53 UI/M_m(0)]

		55. *(<m, 0>) = M_m(0)			[54 BC 26 MP]

		56. M_m: ω->ω & M_m(0) = 0 & @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]		[1.D5]

		57. M_m(0) = 0			[56 SL SR]

		58. *(<m, 0>) = 0			[55 57 LL]

		59. m * 0 := *(<m, 0>)			[18 R]

		60. m * 0 = 0			[58 59 LL]

		61. 		[60 CD]
	
	62. 		[3 UD]





(A2)
1. Show @m, n [ m, n in ω --> m * n+ = m * n + m ]

  2. let m be a set

	3. let n be a set

	4. Show m, n in ω --> m * n+ = m * n + m

		5. m, n in ω			[ACD]

		////////
		4.D0. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[LAZVELL UI/m 5 MP & Ext. Axiom]

		4.D1. @t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]     [Definition of *]

		4.D2. @x [ x in dom * <--> 3y [ <x, y> in * ] ]     [dom UI/* & Ext. Axiom]

		4.D3. @t [ t in ω x ω <--> 3x, y [ x in ω & y in ω & t = <x, y> ] ]      [Corollary 3C UI/ω UI/ω]

		4.D4. @y [ y in ran * <--> 3x [ <x, y> in * ] ]     [ran UI/* & Ext. Axiom]

		4.D5. M_m: ω->ω & M_m(0) = 0 & @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]     [先祖代々 UI/m 5 MP & Ext. Axiom]

		4.D6. @y [ y in ran M_m <--> 3x [ <x, y> in M_m ] ]     [ran UI/M_m & Ext. Axiom]


		4.D7. @t [ t in + <--> 3m, n [ m in ω & n in ω & t = <<m, n>, A_m(n)> ] ]     [HAZELNUT]

		4.D8. @x [ x in dom + <--> 3y [ <x, y> in * ] ]     [dom UI/+ & Ext. Axiom]

		4.D9. @y [ y in ran + <--> 3x [ <x, y> in + ] ]     [ran UI/+ & Ext. Axiom]  

		4.D10. A_m:ω->ω & A_m(0) = m & @n [ n in ω --> A_m(n+) = σ(A_m(n)) ]     [ZHU YUAN]

		4.D11. @y [ y in ran A_m <--> 3x [ <x, y> in A_m ] ]     [ran UI/A_m & Ext. Axiom]
		////////		

		6. @m, n [ m, n in ω --> m * n := *(<m, n>) ]   [Definition of {1} * {2}]

		7. m, n+ in ω --> m * n+ := *(<m, n+>)			[6 UI/m, n+]

		8. m in ω			[5 SL]

		9. Show n+ in ω

			10. ω is inductive & @A [ A is inductive & A != ω --> @t [ t in ω --> t in A ] ]		[Theorem 4B]

			11. ω is inductive			[10 SL]

			12. @A [ A is inductive <--> { } in A & @a [ a in A --> a+ in A ] ]				[Definition of inductive]

			13. ω is inductive <--> { } in ω & @a [ a in ω --> a+ in ω ]			[12 UI/ω]

			14. { } in ω & @a [ a in ω --> a+ in ω ]			[13 BC 11 MP]

			15. @a [ a in ω --> a+ in ω ]			[14 SR]

			16. n in ω --> n+ in ω				[15 UI/n]

			17. n in ω			[5 SR]

			18. n+ in ω			[16 17 MP]

			19. 		[18 DD]
		
		20. m, n+ in ω			[8 9 ADJ]

		21. m * n+ := *(<m, n+>)			[7 20 MP]


		22. * is a binary operation on the set ω			[SHRIMP]

		23. @A, f [ f is a binary operation on the set A <--> f: A x A->A ]			[Def. of binary operation]

		24. * is a binary operation on the set ω <--> *: ω x ω->ω			[23 UI/*, ω]

		25. *: ω x ω->ω			[24 BC 22 MP]

		26. @F, A, B [ F: A->B <--> 
											F is a function &
											dom F = A &
											ran F ⊆ B 
									]			[Def. of into]
		
		27. *: ω x ω->ω <--> 
							* is a function &
							dom * = ω x ω &
							ran * ⊆ ω			[26 UI/*, ω x ω, ω]
		
		28. * is a function &
					dom * = ω x ω &
					ran * ⊆ ω					[27 BC 25 MP]


		29. Show <<m, n+>, M_m(n+)> in *

			30. @t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]				[4.D1]

			31. @t [ t in * <--> 3u, v [ u in ω & v in ω & t = <<u, v>, M_u(v)> ] ]				[30 EQUIV.]

			32. <<m, n+>, M_m(n+)> in * <--> 3u, v [ u in ω & v in ω & <<m, n+>, M_m(n+)> = <<u, v>, M_u(v)> ]			[31 UI/<<m, n+>, M_m(n+)>]

			33. Show 3u, v [ u in ω & v in ω & <<m, n+>, M_m(n+)> = <<u, v>, M_u(v)> ]

				34. m in ω			[8 R]

				35. n+ in ω			[9 R]

				36. <<m, n+>, M_m(n+)> = <<m, n+>, M_m(n+)>			[SID]

				37. m in ω & n+ in ω & <<m, n+>, M_m(n+)> = <<m, n+>, M_m(n+)>			[34 35 36 ADJ]

				38. 3v [ m in ω & v in ω & <<m, n+>, M_m(n+)> = <<m, v>, M_m(v)> ]			[37 EG/n+->v]

				39. 3u [ 3v [ u in ω & v in ω & <<m, n+>, M_m(n+)> = <<u, v>, M_u(v)> ] ]				[38 EG/m->u]

				40. 3u, v [ u in ω & v in ω & <<m, n+>, M_m(n+)> = <<u, v>, M_u(v)> ]			[39 EQUIV.]

				41.		[40 DD]
			
			42. <<m, n+>, M_m(n+)> in *			[32 BC 33 MP]

			43.		[42 DD]
		

		44. @F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]			[MARIN]

		45. * is a function & <m, n+> in dom * -->  @w [ <<m, n+>, w> in * <--> *(<m, n+>) = w ]			[44 UI/*, <m, n+>]

		46. * is a function			[28 SL SL]

		47. Show <m, n+> in dom *

			48. @x [ x in dom * <--> 3y [ <x, y> in * ] ]			[4.D2]

			49. <m, n+> in dom * <--> 3y [ <<m, n+>, y> in * ]			[48 UI/<m, n+>]

			50. <<m, n+>, M_m(n+)> in *			[29 R]

			51. 3y [ <<m, n+>, y> in * ]			[50 EG/M_m(n+) -> y]

			52. <m, n+> in dom *			[49 BC 51 MP]

			53. 		[52 DD]
		
		54. * is a function & <m, n+> in dom *			[46 47 ADJ]

		55. @w [ <<m, n+>, w> in * <--> *(<m, n+>) = w ]			[45 54 MP]

		56. <<m, n+>, M_m(n+)> in * <--> *(<m, n+>) = M_m(n+)			[55 UI/M_m(n+)]

		57. *(<m, n+>) = M_m(n+)			[56 BC 29 MP]


		58. M_m: ω->ω & M_m(0) = 0 & @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]			[4.D5]

		59. @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]			[58 SR]

		60. n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n))			[59 UI/n]

		61. n in ω			[5 SR]

		62. M_m(n+) = RIGHT_ADD_m(M_m(n))			[60 61 MP]


    63. Show RIGHT_ADD_m(M_m(n)) = m * n + m

			64. @F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]			[MARIN]

			65. RIGHT_ADD_m is a function & M_m(n) in dom RIGHT_ADD_m -->  @w [ <M_m(n), w> in RIGHT_ADD_m <--> RIGHT_ADD_m(M_m(n)) = w ]			[64 UI/RIGHT_ADD_m, M_m(n)]

			66. 

			67. @m [ m in ω --> RIGHT_ADD_m: ω->ω ]			[Y2K]

			68. m in ω --> RIGHT_ADD_m: ω->ω			[67 UI/m]

			69. m in ω			[8 R]

			70. RIGHT_ADD_m: ω->ω			[68 69 MP]

			71. @F, A, B [ F: A->B <--> 
											F is a function &
											dom F = A &
											ran F ⊆ B 
										]			[Def. of into]

			72. RIGHT_ADD_m: ω->ω <--> 
											RIGHT_ADD_m is a function &
											dom RIGHT_ADD_m = ω &
											ran RIGHT_ADD_m ⊆ ω 			[71 UI/RIGHT_ADD_m, ω, ω]
			
			73. RIGHT_ADD_m is a function &
					dom RIGHT_ADD_m = ω &
					ran RIGHT_ADD_m ⊆ ω			[72 BC 70 MP]

			74. RIGHT_ADD_m is a function			[73 SL SL]

			75. Show M_m(n) in dom RIGHT_ADD_m

				76. M_m: ω->ω & M_m(0) = 0 & @n [ n in ω --> M_m(n+) = RIGHT_ADD_m(M_m(n)) ]			[4.D5]

				77. M_m: ω->ω			[76 SL SL]

				78. @F, A, B [ F: A->B <--> 
											F is a function &
											dom F = A &
											ran F ⊆ B 
										]			[Def. of into]
				
				79. M_m: ω->ω <--> 
											M_m is a function &
											dom M_m = ω &
											ran M_m ⊆ ω 			[79 UI/M_m, ω, ω]
				
				80. M_m is a function &
						dom M_m = ω &
						ran M_m ⊆ ω					[79 BC 77 MP]
				
				81. @F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]			[MARIN]

				82. M_m is a function & n in dom M_m -->  @w [ <n, w> in M_m <--> M_m(n) = w ]			[81 UI/M_m, n]

				83. Show n in dom M_m

					84. n in ω		[5 SR]

					85. dom M_m = ω			[80 SL SR]

					86. n in dom M_m		[84 85 LL]

					87. 		[86 DD]
				
				88. M_m is a function & n in dom M_m		[(80 SL SL) 83 ADJ]

				89. @w [ <n, w> in M_m <--> M_m(n) = w ]			[82 88 MP]

				90. <n, M_m(n)> in M_m <--> M_m(n) = M_m(n)		[89 UI/M_m(n)]

				91. M_m(n) = M_m(n)			[SID]

				92. <n, M_m(n)> in M_m			[90 BC 91 MP]

				93. @y [ y in ran M_m <--> 3x [ <x, y> in M_m ] ]			[4.D6]

				94. M_m(n) in ran M_m <--> 3x [ <x, M_m(n)> in M_m ]			[93 UI/M_m(n)]

				95. 3x [ <x, M_m(n)> in M_m ]			[92 EG/n->x]

				96. M_m(n) in ran M_m			[94 BC 95 MP]

				97. ran M_m ⊆ ω		[80 SR]

				98. @t [ t in ran M_m --> t in ω ]			[97 EQUIV.]

				99. M_m(n) in ran M_m --> M_m(n) in ω			[98 UI/M_m(n)]

				100. M_m(n) in ω			[99 96 MP]

				101. dom RIGHT_ADD_m = ω			[73 SL SR]

				102. M_m(n) in dom RIGHT_ADD_m			[100 101 LL]

				103.		[102 DD]
			
			
			104. RIGHT_ADD_m is a function & M_m(n) in dom RIGHT_ADD_m			[74 75 ADJ]

			105. @w [ <M_m(n), w> in RIGHT_ADD_m <--> RIGHT_ADD_m(M_m(n)) = w ]			[65 104 MP]

			106. <M_m(n), RIGHT_ADD_m(M_m(n))> in RIGHT_ADD_m <--> RIGHT_ADD_m(M_m(n)) = RIGHT_ADD_m(M_m(n))			[105 UI/RIGHT_ADD_m(M_m(n))]

			107. RIGHT_ADD_m(M_m(n)) = RIGHT_ADD_m(M_m(n))			[SID]

			108. <M_m(n), RIGHT_ADD_m(M_m(n))> in RIGHT_ADD_m			[106 BC 107 MP]


			109. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]		[4.D0]

			110. <M_m(n), RIGHT_ADD_m(M_m(n))> in RIGHT_ADD_m <--> 3u [ u in ω & <M_m(n), RIGHT_ADD_m(M_m(n))> = <u, u + m> ]				[109 UI/<M_m(n), RIGHT_ADD_m(M_m(n))>]

			111. 3u [ u in ω & <M_m(n), RIGHT_ADD_m(M_m(n))> = <u, u + m> ]			[110 BC 108 MP]


			112. u_1 in ω & <M_m(n), RIGHT_ADD_m(M_m(n))> = <u_1, u_1 + m>			[111 EI/u_1]

			113. <M_m(n), RIGHT_ADD_m(M_m(n))> = <u_1, u_1 + m>			[112 SR]

			114. @u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]				[Theorem 3A]

			115. <M_m(n), RIGHT_ADD_m(M_m(n))> = <u_1, u_1 + m>  <-->  M_m(n) = u_1 & RIGHT_ADD_m(M_m(n)) = u_1 + m				[114 UI/M_m(n), RIGHT_ADD_m(M_m(n)), u_1, u_1 + m]

			116. M_m(n) = u_1 & RIGHT_ADD_m(M_m(n)) = u_1 + m			[115 BC 113 MP]

			117. M_m(n) = u_1			[116 SL]

			118. RIGHT_ADD_m(M_m(n)) = u_1 + m			[116 SR]

			119. RIGHT_ADD_m(M_m(n)) = M_m(n) + m			[118 117 LL]


			120. @m, n [ m, n in ω --> m * n := *(<m, n>) ]			[Def. of {1} * {2}]

			121. m, n in ω --> m * n := *(<m, n>)			[120 UI/m, n]

			122. m, n in ω			[5 R]

			123. m * n := *(<m, n>)			[121 122 MP]


			124. @F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]			[MARIN]

			125. * is a function & <m, n> in dom * -->  @w [ <<m, n>, w> in * <--> *(<m, n>) = w ]			[124 UI/*, <m, n>]

			126. * is a function			[28 SL SL]

			127. Show <m, n> in dom *

				128. @x [ x in dom * <--> 3y [ <x, y> in * ] ]			[4.D2]

				129. <m, n> in dom * <--> 3y [ <<m, n>, y> in * ]			[48 UI/<m, n>]

				130. Show <<m, n>, M_m(n)> in *

					131. @t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]				[4.D1]

					132. @t [ t in * <--> 3u, v [ u in ω & v in ω & t = <<u, v>, M_u(v)> ] ]				[131 EQUIV.]

					133. <<m, n>, M_m(n)> in * <--> 3u, v [ u in ω & v in ω & <<m, n>, M_m(n)> = <<u, v>, M_u(v)> ]			[132 UI/<<m, n>, M_m(n)>]

					134. Show 3u, v [ u in ω & v in ω & <<m, n>, M_m(n)> = <<u, v>, M_u(v)> ]

						135. m in ω			[122 SL]

						136. n in ω			[122 SR]

						137. <<m, n>, M_m(n)> = <<m, n>, M_m(n)>			[SID]

						138. m in ω & n in ω & <<m, n>, M_m(n)> = <<m, n>, M_m(n)>			[135 136 137 ADJ]

						139. 3v [ m in ω & v in ω & <<m, n>, M_m(n)> = <<m, v>, M_m(v)> ]			[138 EG/n->v]

						140. 3u [ 3v [ u in ω & v in ω & <<m, n>, M_m(n)> = <<u, v>, M_u(v)> ] ]				[139 EG/m->u]

						141. 3u, v [ u in ω & v in ω & <<m, n>, M_m(n)> = <<u, v>, M_u(v)> ]			[140 EQUIV.]

						142.		[141 DD]
					
					143. <<m, n>, M_m(n)> in *			[133 BC 134 MP]

					144.		[143 DD]
				
				145. 3y [ <<m, n>, y> in * ]			[130 EG/M_m(n)->y]

				146. <m, n> in dom *			[129 BC 145 MP]

				147. 		[146 DD]
			
			148. * is a function & <m, n> in dom *			[126 127 ADJ]

			149. @w [ <<m, n>, w> in * <--> *(<m, n>) = w ]			[125 148 MP]


			150. <<m, n>, *(<m, n>)> in * <--> *(<m, n>) = *(<m, n>)			[149 UI/*(<m, n>)]

			151. *(<m, n>) = *(<m, n>)			[SID]

			152. <<m, n>, *(<m, n>)> in *			[150 BC 151 MP]

			153. @t [ t in * <--> 3m, n [ m in ω & n in ω & t = <<m, n>, M_m(n)> ] ]		[4.D1]

			154. @t [ t in * <--> 3u, v [ u in ω & v in ω & t = <<u, v>, M_u(v)> ] ]				[153 EQUIV.]

			155. <<m, n>, *(<m, n>)> in * <--> 3u, v [ u in ω & v in ω & <<m, n>, *(<m, n>)> = <<u, v>, M_u(v)> ]			[154 UI/<<m, n>, *(<m, n>)>]

			156. 3u, v [ u in ω & v in ω & <<m, n>, *(<m, n>)> = <<u, v>, M_u(v)> ]			[155 BC 152 MP]

			157. u_2 in ω & v_2 in ω & <<m, n>, *(<m, n>)> = <<u_2, v_2>, M_{u_2}(v_2)>			[156 EI/u_2, v_2]

			158. <<m, n>, *(<m, n>)> = <<u_2, v_2>, M_{u_2}(v_2)>			[157 SR]

			159. @u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]			[Theorem 3A]

			160. <<m, n>, *(<m, n>)> = <<u_2, v_2>, M_{u_2}(v_2)>  <-->  <m, n> = <u_2, v_2> & *(<m, n>) = M_{u_2}(v_2)			[159 UI/...]

			161. <m, n> = <u_2, v_2> & *(<m, n>) = M_{u_2}(v_2)			[160 BC 158 MP]

			162. <m, n> = <u_2, v_2>			[161 SL]

			163. *(<m, n>) = M_{u_2}(v_2)			[161 SR]

			164. @u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]			[Theorem 3A]	

			165. <m, n> = <u_2, v_2>  <-->  m = u_2 & n = v_2			[164 UI/...]

			166. m = u_2 & n = v_2			[165 BC 162 MP]

			167. m = u_2		[166 SL]

			168. n = v_2		[166 SR]

			169. *(<m, n>) = M_m(v_2)		[163 167 LL]

			170. *(<m, n>) = M_m(n)		[169 168 LL]

			171. m * n := *(<m, n>)			[123 R]

			172. m * n = M_m(n)			[170 171 LL]

			173. RIGHT_ADD_m(M_m(n)) = M_m(n) + m			[119 R]

			174. RIGHT_ADD_m(M_m(n)) = m * n + m			[173 172 LL]

			175. 		[174 DD]
		

		176. m * n+ := *(<m, n+>)			[21 R]

		177. *(<m, n+>) = M_m(n+)			[57 R]

		178. m * n+ = M_m(n+)			[176 177 LL]
		
		179. M_m(n+) = RIGHT_ADD_m(M_m(n))			[62 R]

		180. m * n+ = RIGHT_ADD_m(M_m(n))			[178 179 LL]

		181. RIGHT_ADD_m(M_m(n)) = m * n + m			[63 R]

		182. m * n+ = m * n + m			[180 181 LL]

		183. 		[182 CD]
	
	184. 		[4 UD]


			
		

      


