Axioms, Definitions, and Theorems:
	Extensionality Axiom:
		@A, B [ @x [ x in A <--> x in B ] --> A = B ]

	Subset Axioms:
		For each formula __ not containing B, the following is an axiom:
		@t1 ... @tk @c [ 3B [ @x [ x in B <--> x in c & __ ] ] ]
			Definition:
			For any set t­1, ..., tk and c, the subset B = {x in c | __ } is the set whose members are exactly those sets in c and __	

	Theorem 3A:
		@u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]

	Corollary 3C:
		@A, B [ 3D [ @t[ t in D <--> 3x, y [x in A & y in B & t = <x, y> ] ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
		For any set sets A, B,  {<x, y> | x in A & y in B}    is the set whose members are exactly the sets of the form <x, y> for some x in A & y in B
		Also known as the Cartesian Product A x B of the sets A and B!

	Relation:
		Definition:
		A relation R is a set of ordered pairs.
		@R [ R is a relation <--> @t [ t in R --> 3x, y[ t = <x, y> ] ] ]

	dom R: 
		@R [ 3D [ @x [ x in D <--> 3y [ <x, y> in R ] ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
		For any set sets R,  dom R  is the set whose members are those 1st-coordinate set of some ordered pair in R
    
	ran R: 
		@R [ 3D [ @x [ x in D <--> 3t [ <t, x> in R ] ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
		For any set sets R,  ran R  is the set whose members are those 2nd-coordinate set of some ordered pair in R
    
      
	Pg 43 Existence part:	
		@F, x [ 3D [ @y [ y in D <--> <x, y> in F ] ] ]
		Definition (its uniqueness is always due to Ext. Axiom):
			For any F, x, the set {y | <x, y> in F} is the set that contains all 2nd-coordinate sets of all ordered pairs in F where x is the first-coordinate set.

	Definition of F(x): 
	(We define it like this for the purpose of making sure that F(x) is always defined for any F and x, so that we can always refer to it)
		@F, x [ F(x) := U({y | <x, y> in F}) ]

	Function:
		Definition:
		@F [F is a function <--> F is a relation & @x [ x in dom F --> 3_1y [ <x, y> in F ] ] ]
	
	[MARIN] Pg 43 When F is a function and x the dom F, F(x) is y IFF <x, y> in F:
		@F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]

	Definition of into:
		@F, A, B [ F maps A into B (F: A->B) <--> 
						F is a function &
						dom F = A &
						ran F ⊆ B 
					]

	[先祖代々] pg 79 Arithmetic A_m existence:
		@m [ m in ω -->  3_1p [ p:ω->ω & p(0) = m & @n [ n in ω --> p(n+) = σ(p(n)) ] ] ]  
			Definition (uniqueness due to 3_1p):
				for any m in ω, A_m:ω->ω & A_m(0) = m & @n [ n in ω --> A_m(n+) = σ(A_m(n)) ]

	Definition of a binary operation:
		@A, f [ f is a binary operation on the set A <--> f: A x A->A ]

	Definition of + operator
		3D [ @t [ t in D <--> 3m, n [ m in ω & n in ω & t = <<m, n>, A_m(n)> ] ] ]
			Definition (its uniqueness is always due to Ext. Axiom):
				@t [ t in + <--> 3m, n [ m in ω & n in ω & t = <<m, n>, A_m(n)> ] ]

				+ := {<<m, n>, p> | m in ω & n in ω & p = A_m(n)}

      Definition of {1} + {2}:
				@m, n [ m, n in ω --> m + n := +(<m, n>) ]

	[SHRIMP] + binary operator result:
		+ is a binary operation on the set ω

  [RA] Subset Axiom (applied):
    @m [ @c [ 3D [ @t [ t in D <--> t in c & 3u [ u in ω & t = <u, u + m> ] ] ] ] ]

  [LA] Subset Axiom (applied):
    @m [ @c [ 3D [ @t [ t in D <--> t in c & 3u [ u in ω & t = <u, m + u> ] ] ] ] ]


// RIGHT ADD
// example: 
//      RIGHT_ADD_m(u) = u + m

1. Show @m [ m in ω --> 3D [ @t [ t in D <--> 3u [ u in ω & t = <u, u + m> ] ] ] ]

	2. let m be a set


	////////

	1.D1. @t [ t in ω x ω <--> 3x, y [ x in ω & y in ω & t = <x, y> ] ]      [Corollary 3C UI/ω UI/ω]

  1.D2. @t [ t in + <--> 3m, n [ m in ω & n in ω & t = <<m, n>, A_m(n)> ] ]     [Definition of +]

  1.D3. @x [ x in dom + <--> 3y [ <x, y> in + ] ]     [dom UI/+ & Ext. Axiom]

  1.D4. @y [ y in ran + <--> 3x [ <x, y> in + ] ]     [ran UI/+ & Ext. Axiom]

	////////


	3. Show m in ω --> 3D [ @t [ t in D <--> 3u [ u in ω & t = <u, u + m> ] ] ]

		4. m in ω			[ACD]

		5. @m [ @c [ 3D [ @t [ t in D <--> t in c & 3u [ u in ω & t = <u, u + m> ] ] ] ] ]			[RA]

		6. @c [ 3D [ @t [ t in D <--> t in c & 3u [ u in ω & t = <u, u + m> ] ] ] ]			[5 UI/m]

		7. 3D [ @t [ t in D <--> t in ω x ω & 3u [ u in ω & t = <u, u + m> ] ] ]			[6 UI/ω x ω]

		8. @t [ t in D_1 <--> t in ω x ω & 3u [ u in ω & t = <u, u + m> ] ]			[7 EI/D_1]

		9. Show @t [ t in D_1 <--> 3u [ u in ω & t = <u, u + m> ] ]

			10. let t be a set

			11. Show t in D_1 --> 3u [ u in ω & t = <u, u + m> ]

				12. t in D_1			[ACD]

				13. @t [ t in D_1 <--> t in ω x ω & 3u [ u in ω & t = <u, u + m> ] ]			[8 R]

				14. t in D_1 <--> t in ω x ω & 3u [ u in ω & t = <u, u + m> ]			[13 UI/t]

				15. t in ω x ω & 3u [ u in ω & t = <u, u + m> ]			[14 BC 12 MP]

				16. 3u [ u in ω & t = <u, u + m> ]			[15 SR]

				17. 		[16 CD]
			
			18. Show 3u [ u in ω & t = <u, u + m> ] --> t in D_1

				19. 3u [ u in ω & t = <u, u + m> ]			[ACD]

				20. u_2 in ω & t = <u_2, u_2 + m>				[19 EI/u_2]

				21. @t [ t in D_1 <--> t in ω x ω & 3u [ u in ω & t = <u, u + m> ] ]			[8 R]

				22. t in D_1 <--> t in ω x ω & 3u [ u in ω & t = <u, u + m> ]			[21 UI/t]

				23. Show t in ω x ω

					24. @t [ t in ω x ω <--> 3x, y [ x in ω & y in ω & t = <x, y> ] ]			[1.D1]

					25. t in ω x ω <--> 3x, y [ x in ω & y in ω & t = <x, y> ]			[24 UI/t]

					26. Show 3x, y [ x in ω & y in ω & t = <x, y> ]

						27. u_2 in ω & t = <u_2, u_2 + m>			[20 R]

						28. Show u_2 + m in ω

							29. + is a binary operation on the set ω			[SHRIMP]

							30. @A, f [ f is a binary operation on the set A <--> f: A x A->A ]			[Def. of a binary operation]

							31. + is a binary operation on the set ω <--> +: ω x ω->ω				[30 UI/ω, +]

							32. +: ω x ω->ω			[31 BC 29 MP]

							33. @F, A, B [ F: A->B <--> 
															F is a function &
															dom F = A &
															ran F ⊆ B 
														]			[Def. of into]
							
							34. +: ω x ω->ω <--> 
												+ is a function &
												dom + = ω x ω &
												ran + ⊆ ω 			[33 UI/+, ω x ω, ω]
							
							35. + is a function &
									dom + = ω x ω &
									ran + ⊆ ω				[34 BC 32 MP]
											

							36. @F, x [ F is a function & x in dom F -->  @w [ <x, w> in F <--> F(x) = w ] ]			[MARIN]

							37. + is a function & <u_2, m> in dom + -->  @w [ <<u_2, m>, w> in + <--> +(<u_2, m>) = w ]			[36 UI/+, <u_2, m>]

							38. + is a function			[35 SL SL]

							39. Show <u_2, m> in dom +

								40. dom + = ω x ω			[35 SL SR]

								41. @t [ t in ω x ω <--> 3x, y [ x in ω & y in ω & t = <x, y> ] ]			[1.D1]

								42. <u_2, m> in ω x ω <--> 3x, y [ x in ω & y in ω & <u_2, m> = <x, y> ]			[41 UI/<u_2, m>]

								43. Show 3x, y [ x in ω & y in ω & <u_2, m> = <x, y> ]

									44. u_2 in ω			[27 SL]

									45. m in ω				[4 R]

									46. u_2 in ω & m in ω				[44 45 ADJ]

									47. <u_2, m> = <u_2, m>			[SID]

									48. u_2 in ω & m in ω & <u_2, m> = <u_2, m>			[46 47 ADJ]

									49. 3y [ u_2 in ω & y in ω & <u_2, m> = <u_2, y> ]			[48 EG/m->y]
									
									50. 3x [ 3y [ x in ω & y in ω & <u_2, m> = <x, y> ] ]			[49 EG/u_2->x]

									51. 3x, y [ x in ω & y in ω & <u_2, m> = <x, y> ]			[50 EQUIV.]

									52. 		[51 DD]
								
								53. <u_2, m> in ω x ω			[42 BC 43 MP]

								54. <u_2, m> in dom +			[53 40 LL]

								55. 		[54 DD]
							
							56. + is a function & <u_2, m> in dom +			[38 39 ADJ]

							57. @w [ <<u_2, m>, w> in + <--> +(<u_2, m>) = w ]			[37 56 MP]

							58. <<u_2, m>, +(<u_2, m>)> in + <--> +(<u_2, m>) = +(<u_2, m>)				[57 UI/+(<u_2, m>)]

							59. +(<u_2, m>) = +(<u_2, m>)			[SID]

							60. <<u_2, m>, +(<u_2, m>)> in +			[58 BC 59 MP]

							61. @y [ y in ran + <--> 3x [ <x, y> in + ] ]			[1.D4]

							62. +(<u_2, m>) in ran + <--> 3x [ <x, +(<u_2, m>)> in + ]			[61 UI/+(<u_2, m>)]

							63. 3x [ <x, +(<u_2, m>)> in + ]			[60 EG/<u_2, m>->x]

							64. +(<u_2, m>) in ran +			[62 BC 63 MP]

							65. ran + ⊆ ω			[35 SR]

							66. @t [ t in ran + --> t in ω ]			[65 EQUIV.]

							67. +(<u_2, m>) in ran + --> +(<u_2, m>) in ω			[66 UI/+(<u_2, m>)]

							68. +(<u_2, m>) in ω			[67 64 MP]

							69. @m, n [ m, n in ω --> m + n := +(<m, n>) ]			[Definition of {1} + {2}]

							70. u_2, m in ω --> u_2 + m := +(<u_2, m>)				[69 UI/u_2, m]

							71. u_2, m in ω			[20 SL 4 ADJ]

							72. u_2 + m := +(<u_2, m>)			[70 71 MP]

							73. u_2 + m in ω			[68 72 LL]

							74.			[73 DD]
						
						75. u_2 in ω		[27 SL]

						76. t = <u_2, u_2 + m>			[27 SR]

						77. u_2 in ω & u_2 + m in ω & t = <u_2, u_2 + m>			[75 28 76 ADJ]

						78. 3y [ u_2 in ω & y in ω & t = <u_2, y> ]			[77 EG/u_2 + m -> y]

						79. 3x [ 3y [ x in ω & y in ω & t = <x, y> ] ]			[78 EG/u_2 -> x]

						80. 3x, y [ x in ω & y in ω & t = <x, y> ]			[79 EQUIV.]

						81. 		[80 DD]
					
					82. t in ω x ω			[25 BC 26 MP]

					83. 		[82 DD]
				
				84. t in ω x ω & 3u [ u in ω & t = <u, u + m> ]			[23 19 ADJ]

				85. t in D_1			[22 BC 84 MP]

				86. 		[85 CD]
			
			87. t in D_1 <--> 3u [ u in ω & t = <u, u + m> ]			[11 18 CB]

			88.		[87 UD]
		
		89. 3D [ @t [ t in D <--> 3u [ u in ω & t = <u, u + m> ] ] ]			[9 EG/D_1->D]

		90.		[89 CD]
	
	91. 		[3 UD]

Definition (its uniqueness is always due to Ext. Axiom):
	for any m in ω, @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]


1. Show @m [ m in ω --> RIGHT_ADD_m: ω->ω ]

	2. let m be a set

	3. Show m in ω --> RIGHT_ADD_m: ω->ω

		4. m in ω		[ACD]


		////////

		3.D1. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[(Def. of RIGHT_ADD_m) UI/m 4 MP & Ext. Axiom]

		3.D2. @x [ x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ] ]			[dom UI/RIGHT_ADD_m & Ext. Axiom]

		////////


		5. @F, A, B [ F: A->B <--> 
									F is a function &
									dom F = A &
									ran F ⊆ B 
								]			[Def. of into]

		6. RIGHT_ADD_m: ω->ω <--> 
									RIGHT_ADD_m is a function &
									dom RIGHT_ADD_m = ω &
									ran RIGHT_ADD_m ⊆ ω			[5 UI/RIGHT_ADD_m, ω, ω]

		7. Show RIGHT_ADD_m is a function

			8. @F [ F is a function <--> F is a relation & @x [ x in dom F --> 3_1y [ <x, y> in F ] ] ]		[Def. of function]

			9. RIGHT_ADD_m is a function <--> RIGHT_ADD_m is a relation & @x [ x in dom RIGHT_ADD_m --> 3_1y [ <x, y> in RIGHT_ADD_m ] ]			[8 UI/RIGHT_ADD_m]

			10. Show RIGHT_ADD_m is a relation

				11. @R [ R is a relation <--> @t [ t in R --> 3x, y [ t = <x, y> ] ] ]			[Def. of relation]

				12. RIGHT_ADD_m is a relation <--> @t [ t in RIGHT_ADD_m --> 3x, y [ t = <x, y> ] ]			[11 UI/RIGHT_ADD_m]

				13. Show @t [ t in RIGHT_ADD_m --> 3x, y [ t = <x, y> ] ]

					14. let t be a set

					15. Show t in RIGHT_ADD_m --> 3x, y [ t = <x, y> ]

						16. t in RIGHT_ADD_m			[ACD]

						17. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[3.D1]

						18. t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ]			[17 UI/t]

						19. 3u [ u in ω & t = <u, u + m> ]			[18 BC 16 MP]

						20. u_1 in ω & t = <u_1, u_1 + m>				[19 EI/u_1]

						21. t = <u_1, u_1 + m>		[20 SR]

						22. 3y [ t = <u_1, y> ]			[21 EG/u_1 + m -> y]

						23. 3x [ 3y [ t = <x, y> ] ]			[22 EG/u_1 -> x]

						24. 3x, y [ t = <x, y> ]		[23 EQUIV.]

						25.		[24 CD]

					26. 		[15 UD]
				
				27. RIGHT_ADD_m is a relation			[12 BC 13 MP]

				28.		[27 DD]
			
			29. Show @x [ x in dom RIGHT_ADD_m --> 3_1y [ <x, y> in RIGHT_ADD_m ] ]

				30. let x be a set

				31. Show x in dom RIGHT_ADD_m --> 3_1y [ <x, y> in RIGHT_ADD_m ]

					32. x in dom RIGHT_ADD_m			[ACD]

					33. @x [ x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ] ]			[3.D2]

					34. x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ]			[33 UI/x]

					35. 3y [ <x, y> in RIGHT_ADD_m ]			[34 BC 32 MP]

					36. <x, y_1> in RIGHT_ADD_m			[35 EI/y_1]

					37. Show @w [ <x, w> in RIGHT_ADD_m --> w = y_1 ]

						38. let w be a set

						39. Show <x, w> in RIGHT_ADD_m --> w = y_1

							40. <x, w> in RIGHT_ADD_m			[ACD]


							41. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[3.D1]

							42. <x, y_1> in RIGHT_ADD_m <--> 3u [ u in ω & <x, y_1> = <u, u + m> ]			[41 UI/<x, y_1>]

							43. 3u [ u in ω & <x, y_1> = <u, u + m> ]			[42 BC 36 MP]

							44. u_2 in ω & <x, y_1> = <u_2, u_2 + m>			[43 EI/u_2]


							45. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[3.D1]

							46. <x, w> in RIGHT_ADD_m <--> 3u [ u in ω & <x, w> = <u, u + m> ]			[45 UI/<x, w>]

							47. 3u [ u in ω & <x, w> = <u, u + m> ]			[46 BC 40 MP]

							48. u_3 in ω & <x, w> = <u_3, u_3 + m>			[47 EI/u_3] 


							49. <x, y_1> = <u_2, u_2 + m>			[44 SR]

							50. @u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]			[Theorem 3A]

							51. <x, y_1> = <u_2, u_2 + m>  <-->  x = u_2 & y_1 = u_2 + m			[50 UI/x, y_1, u_2, u_2 + m]

							52. x = u_2 & y_1 = u_2 + m			[51 BC 49 MP]

							53. x = u_2		[52 SL]

							54. y_1 = u_2 + m		[52 SR]


							55. <x, w> = <u_3, u_3 + m>			[48 SR]

							56. @u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]			[Theorem 3A]

							57. <x, w> = <u_3, u_3 + m>  <-->  x = u_3 & w = u_3 + m			[56 UI/x, w, u_3, u_3 + m]

							58. x = u_3 & w = u_3 + m			[57 BC 55 MP]

							59. x = u_3			[58 SL]

							60. w = u_3 + m				[58 SR]


							61. u_2 = u_3			[53 59 LL]

							62. w = u_2 + m			[60 61 LL]

							63. w = y_1			[62 54 LL]

							64. 		[63 CD]
						
						65. 		[39 UD]
					
					66. <x, y_1> in RIGHT_ADD_m & @w [ <x, w> in RIGHT_ADD_m --> w = y_1 ]			[36 37 ADJ]

					67. 3y [ <x, y> in RIGHT_ADD_m & @w [ <x, w> in RIGHT_ADD_m --> w = y ] ]			[66 EG/y_1->y]

					68. 3_1y [ <x, y> in RIGHT_ADD_m ]			[67 EQUIV.]

					69.		[68 CD]
				
				70. 		[31 UD]
			
			71. RIGHT_ADD_m is a relation & @x [ x in dom RIGHT_ADD_m --> 3_1y [ <x, y> in RIGHT_ADD_m ] ]			[10 29 ADJ]

			72.	RIGHT_ADD_m is a function			[9 BC 71 MP]

			73.		[72 DD]
		
		74. Show dom RIGHT_ADD_m = ω

			75. @A, B [ @x [ x in A <--> x in B ] --> A = B ]			[Ext. Axiom]

			76. @x [ x in dom RIGHT_ADD_m <--> x in ω ] --> dom RIGHT_ADD_m = ω				[75 UI/dom RIGHT_ADD_m, ω].

			77. Show @x [ x in dom RIGHT_ADD_m <--> x in ω ]

				78. let x be a set

				79. Show x in dom RIGHT_ADD_m --> x in ω

					80. x in dom RIGHT_ADD_m			[ACD]

					81. @x [ x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ] ]			[3.D2]

					82. x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ]			[81 UI/x]

					83. 3y [ <x, y> in RIGHT_ADD_m ]			[82 BC 80 MP]

					84. <x, y_1> in RIGHT_ADD_m			[83 EI/y_1]

					85. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[3.D1]

					86. <x, y_1> in RIGHT_ADD_m <--> 3u [ u in ω & <x, y_1> = <u, u + m> ]		[85 UI/<x, y_1>]

					87. 3u [ u in ω & <x, y_1> = <u, u + m> ]			[86 BC 84 MP]

					88. u_2 in ω & <x, y_1> = <u_2, u_2 + m>			[87 EI/u_2]

					89. u_2 in ω			[88 SL]

					90. <x, y_1> = <u_2, u_2 + m>			[88 SR]

					91. @u, v, x, y [ <u, v> = <x, y>  <-->  u = x & v = y ]			[Theorem 3A]

					92. <x, y_1> = <u_2, u_2 + m>  <-->  x = u_2 & y_1 = u_2 + m			[91 UI/x, y_1, u_2, u_2 + m]

					93. x = u_2 & y_1 = u_2 + m			[92 BC 90 MP]

					94. x = u_2		[93 SL]

					95. x in ω			[89 94 LL]

					96. 		[95 CD]

				97. Show x in ω --> x in dom RIGHT_ADD_m

					98. x in ω			[ACD]

					99. @x [ x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ] ]			[3.D2]

					100. x in dom RIGHT_ADD_m <--> 3y [ <x, y> in RIGHT_ADD_m ]			[99 UI/x]

					101. Show 3y [ <x, y> in RIGHT_ADD_m ]

						102. @t [ t in RIGHT_ADD_m <--> 3u [ u in ω & t = <u, u + m> ] ]			[3.D1]

						103. <x, x + m> in RIGHT_ADD_m <--> 3u [ u in ω & <x, x + m> = <u, u + m> ]			[102 UI/<x, x + m>]

						104. Show 3u [ u in ω & <x, x + m> = <u, u + m> ]

							105. x in ω			[98 R]

							106. <x, x + m> = <x, x + m>			[SID]

							107. x in ω & <x, x + m> = <x, x + m>			[105 106 ADJ]

							108. 3u [ u in ω & <x, x + m> = <u, u + m> ] 		[107 EG/x->u]

							109. 		[108 DD]
						
						110. <x, x + m> in RIGHT_ADD_m			[103 BC 104 MP]

						111. 3y [ <x, y> in RIGHT_ADD_m ]			[110 EG/x + m -> y]

						112. 		[111 DD]
					
					113. x in dom RIGHT_ADD_m			[100 BC 101 MP]

					114.		[113 CD]
				
				115. x in dom RIGHT_ADD_m <--> x in ω			[79 97 CB]

				116.		[115 UD]
			
			117. dom RIGHT_ADD_m = ω			[76 77 MP]

			118. 		[117 DD]
		
		119. Show ran RIGHT_ADD_m ⊆ ω



// LEFT ADD
// example: 
//      LEFT_ADD_m(u) = m + u

1. Show @m [ m in ω --> 3D [ @t [ t in D <--> 3u [ u in ω & t = <u, m + u> ] ] ] ]

1. Show @m [ m in ω --> LEFT_ADD_m: ω->ω ]